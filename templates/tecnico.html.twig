{% extends 'login.html.twig' %}

{% block title %}Tecnico{% endblock %}

{% block body %}
    <div class="welcome-message">
        <h2>Bienvenido/a, {{ nombre }}!</h2>
    </div>
    <div class="tabs-container">
        <ul class="tabs">
            {% if rol == 'tecnicoC' %}
                <li class="tab-link current" data-tab="tab-1">Reparaciones</li>
                <li class="tab-link" data-tab="tab-2">Gestión de Productos</li>
            {% elseif rol == 'tecnicoM' %}
                <li class="tab-link current" data-tab="tab-3">Reparaciones</li>
                <li class="tab-link" data-tab="tab-4">Gestión de Productos</li>
            {% endif %}
        </ul>
        {% if rol == 'tecnicoC' %}
            <div id="tab-1" class="tab-content current">
                <h3>Reparaciones</h3>
            </div>
            <div id="tab-2" class="tab-content">
                <h3>Productos</h3>
                <div class="product-container">
                    <form id="product-form">
                        <div class="form-group">
                            <label for="product-select">Seleccionar Producto:</label>
                            <select id="product-select" name="product">
                                <option value="">Seleccione un producto</option>
                                {% for producto in productos %}
                                    <option value="{{ producto.id }}">{{ producto.nombre }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="name">Nombre del Producto:</label>
                            <input type="text" id="name" name="name" />
                        </div>
                        <div class="form-group">
                            <label for="description">Descripción:</label>
                            <textarea id="description" name="description"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="price">Precio:</label>
                            <input type="number" id="price" name="price" />
                        </div>
                        <div class="form-group">
                            <label for="stock">Stock:</label>
                            <input type="number" id="stock" name="stock" />
                        </div>
                        <div class="form-group">
                            <label for="image">URL de la Imagen:</label>
                            <input type="text" id="image" name="image" />
                        </div>
                        <div class="form-group">
                            <label for="tipo_producto">Tipo de Producto:</label>
                            <select id="tipo_producto" name="tipo_producto">
                                <option value="videojuegos">Videojuegos</option>
                                <option value="consolas">Consolas</option>
                                <option value="smartphones">Smartphones</option>
                            </select>
                        </div>
                        <button type="button" id="delete-button" class="btn btn-danger">Eliminar Producto</button>
                        <button type="button" id="add-button" class="btn btn-success">Añadir Producto</button>
                        <button type="button" id="edit-button" class="btn btn-primary">Editar Producto</button>
                    </form>
                </div>
            </div>
        {% elseif rol == 'tecnicoM' %}
            <div id="tab-3" class="tab-content current">
                <h3>Reparaciones</h3>
            </div>
            <div id="tab-4" class="tab-content">
                <h3>Productos</h3>
                <div class="product-container">
                    <form id="product-form">
                        <div class="form-group">
                            <label for="product-select">Seleccionar Producto:</label>
                            <select id="product-select" name="product">
                                <option value="">Seleccione un producto</option>
                                {% for producto in productos %}
                                    <option value="{{ producto.id }}">{{ producto.nombre }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="name">Nombre del Producto:</label>
                            <input type="text" id="name" name="name" />
                        </div>
                        <div class="form-group">
                            <label for="description">Descripción:</label>
                            <textarea id="description" name="description"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="price">Precio:</label>
                            <input type="number" id="price" name="price" />
                        </div>
                        <div class="form-group">
                            <label for="stock">Stock:</label>
                            <input type="number" id="stock" name="stock" />
                        </div>
                        <div class="form-group">
                            <label for="image">URL de la Imagen:</label>
                            <input type="text" id="image" name="image" />
                        </div>
                        <div class="form-group">
                            <label for="tipo_producto">Tipo de Producto:</label>
                            <select id="tipo_producto" name="tipo_producto">
                                <option value="videojuegos">Videojuegos</option>
                                <option value="consolas">Consolas</option>
                                <option value="smartphones">Smartphones</option>
                            </select>
                        </div>
                        <button type="button" id="delete-button" class="btn btn-danger">Eliminar Producto</button>
                        <button type="button" id="add-button" class="btn btn-success">Añadir Producto</button>
                        <button type="button" id="edit-button" class="btn btn-primary">Editar Producto</button>
                    </form>
                </div>
            </div>
        {% endif %}
    </div>

    <style>
        .tabs-container {
            width: 80%;
            margin: 0 auto;
        }
        .tabs {
            list-style: none;
            padding: 0;
            display: flex;
            justify-content: space-around;
            cursor: pointer;
        }
        .tabs .tab-link {
            padding: 10px 20px;
            background: #007bff;
            color: white;
            border-radius: 5px 5px 0 0;
        }
        .tabs .tab-link.current {
            background: #0056b3;
        }
        .tab-content {
            display: none;
            padding: 20px;
            border: 1px solid #ccc;
            border-top: none;
            background: #f9f9f9;
        }
        .tab-content.current {
            display: block;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
        }
        .form-group input, .form-group textarea, .form-group select {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .btn {
            margin-top: 10px;
            padding: 10px 20px;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .btn-danger {
            background-color: #dc3545;
        }
        .btn-danger:hover {
            background-color: #c82333;
        }
        .btn-success {
            background-color: #28a745;
        }
        .btn-success:hover {
            background-color: #218838;
        }
        .btn-primary {
            background-color: #007bff;
        }
        .btn-primary:hover {
            background-color: #0056b3;
        }
    </style>

    <!-- Script para almacenar el token JWT en localStorage -->
    <script>
        // Obtener el token desde Twig
        const token = "{{ token|e('js') }}"; // Escapa el token para uso seguro en JavaScript
        
        // Verificar si el token existe y almacenarlo en localStorage
        if (token) {
            localStorage.setItem('jwtToken', token);
            console.log('Token JWT guardado en localStorage');
        } else {
            console.error('Token JWT no encontrado');
        }

    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tabs = document.querySelectorAll('.tab-link');
            const contents = document.querySelectorAll('.tab-content');
            const productSelect = document.getElementById('product-select');
            const nameInput = document.getElementById('name');
            const descriptionTextarea = document.getElementById('description');
            const priceInput = document.getElementById('price');
            const stockInput = document.getElementById('stock');
            const imageInput = document.getElementById('image');
            const tipoProductoInput = document.getElementById('tipo_producto');
            //botones
            const deleteButton = document.getElementById('delete-button');
            const addButton = document.getElementById('add-button');
            const editButton = document.getElementById('edit-button');

            // Obtener el token de localStorage
            const token = localStorage.getItem('jwtToken');

            // Maneja el cambio de pestañas
            tabs.forEach(tab => {
                tab.addEventListener('click', function () {
                    tabs.forEach(t => t.classList.remove('current'));
                    contents.forEach(c => c.classList.remove('current'));

                    tab.classList.add('current');
                    document.getElementById(tab.getAttribute('data-tab')).classList.add('current');
                });
            });

            // Maneja la selección de un producto en el desplegable
            productSelect.addEventListener('change', function () {
                const productId = this.value;

                if (productId) {
                    // Realiza una solicitud para obtener los detalles del producto seleccionado
                    fetch(`/getProducto/${productId}`, {
                        headers: {
                            'Authorization': `Bearer ${token}`
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        nameInput.value = data.nombre;
                        descriptionTextarea.value = data.descripcion;
                        priceInput.value = data.precio;
                        stockInput.value = data.stock;
                        imageInput.value = data.imagen;
                        tipoProductoInput.value = data.tipo_producto;
                    })
                    .catch(error => console.error('Error:', error));
                }
            });

            // Maneja el clic en el botón de eliminar producto
            deleteButton.addEventListener('click', function () {
                const productId = productSelect.value;

                if (productId) {
                    fetch(`/api/producto/delete/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Authorization': `Bearer ${token}`
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'Producto eliminado') {
                            alert('Producto eliminado exitosamente');
                            productSelect.value = '';
                            nameInput.value = '';
                            descriptionTextarea.value = '';
                            priceInput.value = '';
                            stockInput.value = '';
                            imageInput.value = '';
                            tipoProductoInput.value = '';
                        } else {
                            alert('Error al eliminar el producto');
                        }
                    })
                    .catch(error => console.error('Error:', error));
                    
                } else {
                    alert('Seleccione un producto para eliminar');
                }
            });

            // Maneja el clic en el botón de añadir producto
            addButton.addEventListener('click', function () {
                const name = nameInput.value;
                const description = descriptionTextarea.value;
                const price = priceInput.value;
                const stock = stockInput.value;
                const image = imageInput.value;
                const tipoProducto = tipoProductoInput.value;

                if (name && description && price && stock && image && tipoProducto) {
                    fetch('/api/anadirProducto', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${token}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            nombre: name,
                            descripcion: description,
                            precio: price,
                            stock: stock,
                            imagen: image,
                            tipo_producto: tipoProducto
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'Producto añadido') {
                            alert('Producto añadido exitosamente');
                            // Limpia los campos del formulario
                            productSelect.value = '';
                            nameInput.value = '';
                            descriptionTextarea.value = '';
                            priceInput.value = '';
                            stockInput.value = '';
                            imageInput.value = '';
                            tipoProductoInput.value = '';
                        } else {
                            alert('Error al añadir el producto');
                        }
                    })
                    .catch(error => console.error('Error:', error));

                } else {
                    alert('Complete todos los campos para añadir un producto');
                }
            });

            // Maneja el clic en el botón de editar producto
            editButton.addEventListener('click', function () {
                const productId = productSelect.value;
                const name = nameInput.value;
                const description = descriptionTextarea.value;
                const price = priceInput.value;
                const stock = stockInput.value;
                const image = imageInput.value;
                const tipoProducto = tipoProductoInput.value;

                if (productId && name && description && price && stock && image && tipoProducto) {
                    fetch(`/api/producto/editar/${productId}`, {
                        method: 'PUT',
                        headers: {
                            'Authorization': `Bearer ${token}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            nombre: name,
                            descripcion: description,
                            precio: price,
                            stock: stock,
                            imagen: image,
                            tipo_producto: tipoProducto
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'Producto actualizado exitosamente') {
                            alert('Producto actualizado exitosamente');
                        } else {
                            alert('Error al actualizar el producto');
                        }
                    })
                    .catch(error => console.error('Error:', error));

                } else {
                    alert('Complete todos los campos para editar el producto');
                }
            });
        });
    </script>


{% endblock %}